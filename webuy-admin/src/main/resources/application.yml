server:
  port: 7501
  tomcat:
    max-threads: 10   #Spring boot自带的tomcat线程数默认值为200个
    min-spare-threads: 5    #初始化线程数

spring:
   profiles:
     active: ${profileActive}
   application:
     name: webuy-admin
   security:
     user:
       name: admin
       password: ak402507979

   datasource:
      type: com.alibaba.druid.pool.DruidDataSource            # 当前数据源操作类型
      driver-class-name: org.gjt.mm.mysql.Driver              # mysql驱动包
      url: jdbc:mysql://47.99.129.104:3306/webuy_admin?useUnicode=true&characterEncoding=UTF-8             # 数据库名称
      username: user01
      password: ak402507979
      initialSize: 5
      minIdle: 5
      maxActive: 20
      maxWait: 60000
      poolPreparedStatements: true           # 打开PSCache，并且指定每个连接上PSCache的大小
      maxPoolPreparedStatementPerConnectionSize: 20
      filters: stat,wall,logback    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      connectionProperties:
         druid:
           stat:
             mergeSql: true   # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
             slowSqlMillis: 5000

   boot:
     admin:
       monitor:
         period: 10000 #监控刷新时间
       discovery:
         enabled: true  #是否开启自动发现服务
       turbine:
         location: webuy-admin
       routes:
         endpoints: env,metrics,trace,dump,jolokia,info,configprops,trace,logfile,refresh,flyway,liquibase,heapdump,loggers,auditevents,hystrix.stream,turbine.stream

turbine:
  appConfig: webuy-backstage
  combineHostPort: true

logging:
  config: classpath:config/logback/logback-spring.xml

# 2.0开始，actuator默认不开放，所以要设置为开放
management:
  endpoints:
    web:
      exposure:
        include: "*"  #选择暴露的端点  info,health,env,beans
        #不暴露的端点
        #exclude=env
  endpoint:
    health:
      show-details: ALWAYS   #health endpoint是否必须显示全部细节。默认情况下, /actuator/health 是公开的，并且不显示细节。



---
spring:
  profiles: dev
eureka:
  client:
    register-with-eureka: true
    service-url:
      defaultZone: http://admin:ak402507979@47.99.129.104:7001/eureka
  instance:
    instance-id: ${spring.application.name}:${eureka.instance.ip-address}:${server.port}
    prefer-ip-address: true     #访问路径可以显示IP地址
    ip-address: 127.0.0.01   #server和client不在同一网段使用ip-address:配置
    health-check-url-path: /actuator/health
    status-page-url: http://${eureka.instance.ip-address}:${server.port}/actuator/info
    home-page-url: http://${eureka.instance.ip-address}:${server.port}/
    metadata-map:
      context-path: /actuator
      startup: ${random.int}    #needed to trigger info and endpoint update after restart
      "user.name": ${spring.security.user.name}         #These two are needed so that the server
      "user.password": ${spring.security.user.password}  #can access the protected client endpoints

---
spring:
  profiles: test
eureka:
  client:
    register-with-eureka: true
    service-url:
      defaultZone: http://admin:ak402507979@47.99.129.104:7001/eureka
  instance:
    instance-id: ${spring.application.name}:${eureka.instance.ip-address}:${server.port}
    prefer-ip-address: true     #访问路径可以显示IP地址
    ip-address: 119.3.11.116   #server和client不在同一网段使用ip-address:配置
    health-check-url-path: /actuator/health
    status-page-url: http://${eureka.instance.ip-address}:${server.port}/actuator/info
    home-page-url: http://${eureka.instance.ip-address}:${server.port}/
    metadata-map:
      context-path: /actuator
      startup: ${random.int}    #needed to trigger info and endpoint update after restart
      "user.name": ${spring.security.user.name}         #These two are needed so that the server
      "user.password": ${spring.security.user.password}  #can access the protected client endpoints
---